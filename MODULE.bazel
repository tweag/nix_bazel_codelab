bazel_dep( # https://bazel.build/external/overview#bzlmod
    name = "rules_nixpkgs_core",
    version = "0.11.1",
)

bazel_dep( # needed by `nixpkgs_*_configure` as long as they are not module extensions yet. to do, test.
    name = "platforms",
    version = "0.0.9",
)

# https://bazel.build/external/extension#extension_usage
nix_repo = use_extension("@rules_nixpkgs_core//extensions:repository.bzl", "nix_repo")
nix_repo.file( # https://github.com/tweag/rules_nixpkgs/blob/master/core/extensions/repository.bzl#L270
    name = "nixpkgs",
    file = "//nix/nixpkgs:default.nix",
)
use_repo(nix_repo, "nixpkgs")

non_module_dependencies = use_extension("//:non_module_dependencies.bzl", "non_module_dependencies")
use_repo(non_module_dependencies, "nixpkgs_java_runtime_toolchain", "go_sdk_toolchains")

# java

bazel_dep(
    name = "rules_nixpkgs_java",
    version = "0.11.1",
)

bazel_dep(
    name = "rules_java",
    version = "7.5.0",
)

register_toolchains("@nixpkgs_java_runtime_toolchain//:all")

local_path_override(
    module_name = "rules_nixpkgs_java",
    path = "../rules_nixpkgs/toolchains/java",
)

# proto

bazel_dep(
    name = "rules_proto",
    version = "6.0.0-rc2",
)

# go

bazel_dep(
    name = "rules_nixpkgs_go",
    version = "0.11.1",
)

bazel_dep(
    name = "rules_go",
    version = "0.46.0",
)

bazel_dep(
    name = "gazelle",
    version = "0.36.0",
)

register_toolchains("@go_sdk_toolchains//:all")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_golang_protobuf",
    "org_golang_google_grpc",
)

local_path_override(
    module_name = "rules_nixpkgs_go",
    path = "../rules_nixpkgs/toolchains/go",
)

# typescript

bazel_dep(
    name = "aspect_rules_ts",
    version = "2.2.0",
)

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)

rules_ts_ext.deps()

use_repo(rules_ts_ext, "npm_typescript")

bazel_dep(name = "aspect_rules_js", version = "1.41.1")

####### Node.js version #########
# By default you get the node version from DEFAULT_NODE_VERSION in @rules_nodejs//nodejs:repositories.bzl
# Optionally you can pin a different node version:
bazel_dep(name = "rules_nodejs", version = "5.8.2")
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "16.14.2")
#################################

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)

npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)

use_repo(npm, "npm")
